install.packages('devtools')
install_github('tidyverse/rlang')
devtools::install_github('tidyverse/rlang')
library(rlang)
install.packages('dplyr','sparklyr')
install.packages('dplyr')
library(sparklyr)
install.packages('sparklyr')
x = 2
while(x > 1 & x <3){
print('x is between 1 and 3')
}
x <- 0
while(x <= 7){
print('x is between 1 and 3')
x <- x+1
}
7
while(x <= 7){
print('x <= 7')
x <- x+1
}
x <- 0
while(x <= 7){
print('x <= 7')
x <- x+1
}
while(x <= 7){
print('x = 'x)
x <- x+1
}
while(x <= 7){
print('x = 'x)
x <- x+1
}
while(x <= 7){
print(x)
x <- x+1
}
x <- 0
while(x <= 7){
print(x)
x <- x+1
}
for(i in 1:5){
print('Hello R')
}
while(x <= 7){
print(x)
x+=1
}
x <- 0
while(x <= 7){
print(x)
x+=1
}
while(x <= 7){
print(x)
x=+1
}
rnom(1)
rnorm(1)
rnorm(1)
rnorm(1)
rnorm(1)
rnorm(1)
rnorm(1)
x <- rnorm(1) #random number generator (-2,2)
if(x >1){
answer <- 'greater than 1'
}
x <- rnorm(1) #random number generator (-2,2)
if(x >1){
answer <- 'greater than 1'
}
x <- rnorm(1) #random number generator (-2,2)
if(x >1){
answer <- 'greater than 1'
}
x <- rnorm(1) #random number generator (-2,2)
if(x >1){
answer <- 'greater than 1'
}
x <- rnorm(1) #random number generator (-2,2)
if(x >1){
answer <- 'greater than 1'
}
x <- rnorm(1) #random number generator (-2,2)
if(x >1){
answer <- 'greater than 1'
}
x <- rnorm(1) #random number generator (-2,2)
if(x >1){
answer <- 'greater than 1'
}
x <- rnorm(1) #random number generator (-2,2)
if(x >1){
answer <- 'greater than 1'
}
x <- rnorm(1) #random number generator (-2,2)
if(x >1){
answer <- 'greater than 1'
}
x <- rnorm(1) #random number generator (-2,2)
if(x >1){
answer <- 'greater than 1'
}
rm(answer)
x <- rnorm(1) #random number generator (-2,2)
if(x >1){
answer <- 'Greater than 1'
} else{
answer <- 'Less than or equal to 1'
}
rm(answer)
x <- rnorm(1) #random number generator (-2,2)
if(x >1){
answer <- 'Greater than 1'
} else if(x >= -1){
answer <- 'Between -1 and 1'
} else{
answer <- 'Less than -1'
}
pkgs <- installed.packages()[,1]
pkgs.need <- c('timetk','tidyquant')
pkgs.missing <- pkgs.need[!pkgs.need %in% pkgs]
if (length(pkgs.missing) > 0){
install.packages(pkgs.missing, dep = T)
}
library(timetk) # Toolkit for working with time series in R
library(tidyquant) # Loads tidyverse, financial pkgs, used to get data
library(h2o) # Awesome ML Library
beer_sales_tbl <- tq_get('S4248SM144NCEN', get='economic.data', from='2010-01-01', to='2017-10-27')
beer_sales_tbl_aug <- beer_sales_tbl %>%
tk_augment_timeseries_signature()
beer_sales_tbl_h2o <- beer_sales_tbl_aug %>%
select_if(~ !is.Date(.)) %>%
select_if(~ !any(is.na(.))) %>%
mutate_if(is.ordered, ~ as.character(.) %>% as.factor)
train <- beer_sales_tbl_h2o %>% filter(year < 2016)
validate <- beer_sales_tbl_h2o %>% filter(year == 2016)
test <- beer_sales_tbl_h2o %>% filter(year == 2017)
h2o.init()
h2o.no_progress()
train_h2o <- as.h2o(train)
val_h2o <- as.h2o(validate)
test_h2o <- as.h2o(test)
# naming response (target) and predictor (features) variables
y <- 'price'
x <- setdiff(names(train_h2o), y)
# linear regression model example
model <- h2o.automl(
x = x,
y = y,
training_frame = train_h2o,
validation_frame = val_h2o,
leaderboard_frame = test_h2o,
max_runtime_sec = 60,
stopping_metric = 'deviance')
leader <- model@leader
leader
model <- h2o.automl(
x = x,
y = y,
training_frame = train_h2o,
validation_frame = val_h2o,
leaderboard_frame = test_h2o,
max_runtime_secs = 60,
stopping_metric = 'deviance')
leader <- model@leader
pred <- h2o.predict(leader, newdata = test_h2o)
h2o.performance(leader, newdata = test_h2o)
error_tbl <- beer_sales_tbl %>%
filter(lubridate::year(date) == 2017) %>%
add_column(pred = pred %>% as.tibble() %>% pull(predict)) %>%
rename(actual = price) %>%
mutate(
error = actual - pred,
error_pct = error/actual
)
error_tbl
error_tbl %>% summarise(
me = mean(error),
rmse = mean(error^2)^0.5,
mae = mean(abs(error)),
mape = mean(abs(error_pct)),
mpe = mean(error_pct)
)
error_tbl %>% summarise(
me = mean(error),
rmse = mean(error^2)^0.5,
mae = mean(abs(error)),
mape = mean(abs(error_pct)),
mpe = mean(error_pct)
) %>%
glimpse()
setwd('./')
################################################################################
#install packages (if missing)
################################################################################
pkgs <- installed.packages()[,1]
pkgs.need <- c('rvest','tidyverse')
pkgs.missing <- pkgs.need[!pkgs.need %in% pkgs]
if (length(pkgs.missing) > 0){
install.packages(pkgs.missing, dep = TRUE)
}
library(rvest) #
library(tidyverse
setwd('./')
################################################################################
#install packages (if missing)
################################################################################
pkgs <- installed.packages()[,1]
pkgs.need <- c('rvest','tidyverse')
pkgs.missing <- pkgs.need[!pkgs.need %in% pkgs]
if (length(pkgs.missing) > 0){
install.packages(pkgs.missing, dep = TRUE)
}
library(rvest) #
library(tidyverse)
content <- read_html('https://news.ycombinator.com/')
title <- content %>% html_nodes('a.storylink') %>% html_text()
title
link_domain <- content %>% html_nodes('span.sitestr') %>% html_text()
score <- content %>% html_nodes('span.score') %>% html_text()
age <- content %>% html_nodes('span.age') %>% html_text()
df <- data.frame(title = title, link_domain = link_domain, score = score, age = age)
data.frame(title = title, link_domain = link_domain, score = score, age = age)
title <- content %>% html_nodes('a.storylink') %>% html_text()
link_domain <- content %>% html_nodes('span.sitestr') %>% html_text()
score <- content %>% html_nodes('span.score') %>% html_text()
age <- content %>% html_nodes('span.age') %>% html_text()
df <- data.frame(title = title, link_domain = link_domain, score = score, age = age)
title
link_domain
link_domain <- content %>% html_nodes('span.sitestr') %>% html_text()
link_domain
score
age
content %>% html_nodes('a.storylink') %>% html_text()
content <- read_html('https://news.ycombinator.com/')
title <- content %>% html_nodes('a.storylink') %>% html_text()
title
link_domain <- content %>% html_nodes('span.sitestr') %>% html_text()
link_domain
score <- content %>% html_nodes('span.score') %>% html_text()
age <- content %>% html_nodes('span.age') %>% html_text()
age
score
age
x <- (1:25)
x
for i in x
sum(i^3)
sum(x^3)
x <- (1:5)
x
sum(2*(x^2))
(20+19+19+18+19)/100
?set.seed
getwd()
setwd('./msim607-machine-learning/project2/project2/code/')
setwd('./msim607-machine-learning/project2/project2/code/')
getwd()
pkgs <- installed.packages()[,1]
pkgs.need <- c('caTools','tidyverse','MASS')
pkgs.missing <- pkgs.need[!pkgs.need %in% pkgs]
if (length(pkgs.missing) > 0){
install.packages(pkgs.missing, dep = TRUE)
}
library(caTools) # Toolkit for data preprocessing in R
library(tidyverse) # Loads tidyverse
library(MASS) # Modern Applied Statistics with S
################################################################################
df.trn <- read.table('../data/regression.tra')
df.trn <- read.table('../data/regression.tra', sep = ' ')
df.trn <- read.table('../data/regression.tra', sep = '')
setwd('./msim607-machine-learning/project2/project2/')
setwd('./msim607-machine-learning/project2/project2')
setwd('./msim607-machine-learning/project2/project2')
setwd('./msim607-machine-learning/project2/project2/')
getwd()
pkgs <- installed.packages()[,1]
pkgs.need <- c('caTools','tidyverse','MASS')
pkgs.missing <- pkgs.need[!pkgs.need %in% pkgs]
if (length(pkgs.missing) > 0){
install.packages(pkgs.missing, dep = TRUE)
}
library(caTools) # Toolkit for data preprocessing in R
library(tidyverse) # Loads tidyverse
library(MASS) # Modern Applied Statistics with S
df.trn <- read.delim2('../data/regression.tra', sep = '')
View(df.trn)
?read.delim2
df.trn <- read.delim2('../data/regression.tra', header = FALSE, sep = '')
View(df.trn)
df <- read.delim2('../data/regression.tra', header = FALSE, sep = '')
df
df.trn <- as.data.frame(t(df))
View(df.trn)
View(df.trn)
rm(df.trn)
rm(df)
x.trn <- system('awk "NR%2==0" ../data/regression.tra', intern = TRUE)
x.trn
View(x.trn)
system('awk "NR%2==0" ../data/regression.tra > x.trn', intern = TRUE)
system('awk "NR%1==0" ../data/regression.tra > y.trn', intern = TRUE)
